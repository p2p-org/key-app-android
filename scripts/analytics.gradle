apply plugin: 'com.android.application'

android {
    defaultConfig {
        def sentryProperties = new Properties()
        def sentryPropertiesFile = rootProject.file("sentry.properties")
        if (sentryPropertiesFile.canRead()) {
            logger.quiet "(SENTRY): using sentry properties file"
            sentryProperties.load(new FileInputStream(sentryPropertiesFile))
        } else {
            logger.quiet "(SENTRY): sentry properties is not found."
        }

        def sentryDsn = sentryProperties["auth.dsn"]
        manifestPlaceholders = [SENTRY_DSN: "$sentryDsn"]
    }

    buildTypes {
        def analyticsProperties = new Properties()
        def analyticsPropertiesFile = rootProject.file("analytics.properties")
        if (analyticsPropertiesFile.canRead()) {
            logger.quiet "(ANALYTICS): using analytics properties file"
            analyticsProperties.load(new FileInputStream(analyticsPropertiesFile))
        } else {
            logger.quiet "(ANALYTICS): analytics properties is not found."
        }

        def debugKey = analyticsProperties["amplitudeDebugKey"]

        debug {
            manifestPlaceholders = [SENTRY_ENV: "debug"]
            buildConfigField("String", "amplitudeKey", "\"${debugKey}\"")
        }
        feature {
            manifestPlaceholders = [SENTRY_ENV: "feature"]
            buildConfigField("String", "amplitudeKey", "\"${debugKey}\"")
        }
        releaseLocal {
            manifestPlaceholders = [SENTRY_ENV: "release"]
            buildConfigField("String", "amplitudeKey", "\"${debugKey}\"")
        }
        releaseFirebase {
            manifestPlaceholders = [SENTRY_ENV: "release"]
            buildConfigField("String", "amplitudeKey", "\"${debugKey}\"")
        }
        release {
            manifestPlaceholders = [SENTRY_ENV: "release"]
            buildConfigField("String", "amplitudeKey", "\"${analyticsProperties["amplitudeReleaseKey"]}\"")
        }
    }
}