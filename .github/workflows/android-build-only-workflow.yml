on:
  pull_request:
    branches:
      - release/*
      - feature/*
  push:
    branches:
      - release/*
jobs:
  android-build-artifacts:
    name: "Run build feature artifacts"

    runs-on: ubuntu-latest
    environment: develop
    steps:
      - name: "Checkout to the current commit hash"
        uses: actions/checkout@v2

      - name: "Send start deploy message to slack"
        run: |
          git fetch
          cd bash_scripts
          bash slack_deploy_start_message.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }}
          cd ..

      - name: "Create Firebase App file"
        uses: ./.github/actions/setup-firebase
        with:
          firebase-secret: ${{ secrets.GOOGLE_SERVICE_JSON_SECRET }}

      - name: "Create torus.properties"
        uses: ./.github/actions/setup-torus
        with:
          torus-verifier-debug: ${{ secrets.TORUS_VERIFIER_DEBUG }}
          torus-verifier-feature: ${{ secrets.TORUS_VERIFIER_FEATURE }}
          torus-verifier-release: ${{ secrets.TORUS_VERIFIER_RELEASE }}
          torus-subverifier-release: ${{ secrets.TORUS_SUB_VERIFIER_RELEASE_STORE }}
          torus-subverifier-firebase: ${{ secrets.TORUS_SUB_VERIFIER_RELEASE_FIREBASE }}
          torus-subverifier-local: ${{ secrets.TORUS_SUB_VERIFIER_RELEASE_LOCAL }}

      - name: "Create apikey.properties"
        uses: ./.github/actions/setup-apikey
        with:
          rpc-pool-secret: ${{ secrets.RPC_POOL_API_KEY }}
          moonpay-secret: ${{ secrets.MOONPAY_KEY }}
          compare-secret: ${{ secrets.COMPARE_PUBLIC_KEY }}
          intercom-id-secret: ${{ secrets.INTERCOM_APP_ID }}
          intercom-key-secret: ${{ secrets.INTERCOM_API_KEY }}
          amplitude-secret: ${{ secrets.AMPLITUDE_KEY }}
          apps-flyer-secret: ${{ secrets.APPS_FLYER_KEY }}

      - name: "Create cert.pem file"
        env:
          SSL_CERTIFICATE: ${{ secrets.SSL_CERTIFICATE }}
        run: echo $SSL_CERTIFICATE -> app/src/main/res/raw/cert.pem

      - name: "Create sentry.property file"
        uses: ./.github/actions/setup-sentry
        with:
          auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          auth-dsn: ${{ secrets.SENTRY_AUTH_DSN }}

      - name: "Setup gradle"
        uses: ./.github/actions/setup-gradle

      - name: "Build APK artifact"
        run: ./gradlew assembleFeature

      - name: "Upload APK to Firebase App Distribution"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: ./gradlew assembleFeature appDistributionUploadFeature

      - name: "Upload APK to Slack Channel"
        uses: ./.github/actions/setup-slack
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          build-type: "feature"
          artifact-type: "apk"

      - name: "Upload changelog, and Jira ticket to slack channel"
        run: |
          cd bash_scripts
          value=`cat timestamp.txt`
          bash slack_deploy_jira_ticket.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }} $value
          bash slack_deploy_changelog.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }}
          cd ..


      - name: "Send finish deploy message to slack"
        run: |
          cd bash_scripts
          value=`cat timestamp.txt`
          bash slack_deploy_finish_message.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }} $value