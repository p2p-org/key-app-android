on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
jobs:

  slack-init-message:
    name: "Send start workflow message to Slack"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash
        run: |
          cd bash_scripts
          bash slack_init_message.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }}
          cd ..
      - uses: actions/upload-artifact@v3
        with:
          name: timestamp
          path: bash_scripts/timestamp.txt
          retention-days: 1

  android-lint:
    name: "Run ktlint check"
    needs:
      - slack-init-message

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup-sentry
        with:
          auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          auth-dsn: ${{ secrets.SENTRY_AUTH_DSN }}
      - name: Run ktlint
        run: ./gradlew ktlint -PautoCorrect=0
      - uses: actions/download-artifact@v3
        with:
          name: timestamp
      - run: |
          value='cat timestamp.txt'
          cd bash_scripts
          bash slack_ktlint_message ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }} $value


  android-unit-tests:
    name: "Run unit tests"
    needs:
      - slack-init-message
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create and fill sentry.properties
        uses: ./.github/actions/setup-sentry
        with:
          auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          auth-dsn: ${{ secrets.SENTRY_AUTH_DSN  }}

      - uses: ./.github/actions/setup-gradle

      - uses: actions/setup-java@v1
        with: { java-version: 11 }

      - name: Setup google-json from secrets
        env:
          FIREBASE_SECRET: ${{ secrets.GOOGLE_SERVICE_JSON_SECRET }}
        run: echo $FIREBASE_SECRET > app/google-services.json

      - name: Create and fill cert.pem certificate for SSL pinning
        env:
          SSL_CERTIFICATE: ${{ secrets.SSL_CERTIFICATE }}
        run: echo $SSL_CERTIFICATE -> app/src/main/res/raw/cert.pem

      - name: Run unit tests
        run: ./gradlew testDebug

  slack-await-message:
    name: "Send Slack await message"
    needs:
      - android-lint
      - android-unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: timestamp
      - shell: bash
        run: |
          value='cat timestamp.txt'
          cd bash_scripts
          bash slack_deploy_ready ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }} $value

  android-build-artifacts:
    name: "Run build feature artifacts"
    needs:
      - android-lint
      - android-unit-tests
      - slack-await-message

    runs-on: ubuntu-latest
    environment: develop
    steps:
      - uses: actions/checkout@v2

      - name: Create google-services.json
        uses: ./.github/actions/setup-firebase
        with:
          firebase-secret: ${{ secrets.GOOGLE_SERVICE_JSON_SECRET }}

      - name: Create apikey file
        uses: ./.github/actions/setup-apikey
        with:
          rpc-pool-secret: ${{ secrets.RPC_POOL_API_KEY }}
          moonpay-secret: ${{ secrets.MOONPAY_KEY }}
          compare-secret: ${{ secrets.COMPARE_PUBLIC_KEY }}
          intercom-id-secret: ${{ secrets.INTERCOM_APP_ID }}
          intercom-key-secret: ${{ secrets.INTERCOM_API_KEY }}
          amplitude-secret: ${{ secrets.AMPLITUDE_KEY }}

      - name: Create and fill cert.pem certificate for SSL pinning
        env:
          SSL_CERTIFICATE: ${{ secrets.SSL_CERTIFICATE }}
        run: echo $SSL_CERTIFICATE -> app/src/main/res/raw/cert.pem

      - name: Create and fill sentry.properties
        uses: ./.github/actions/setup-sentry
        with:
          auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          auth-dsn: ${{ secrets.SENTRY_AUTH_DSN }}

      - uses: ./.github/actions/setup-gradle

      - name: Upload artifact to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: ./gradlew assembleFeature appDistributionUploadFeature

      - uses: actions/download-artifact@v3
        with:
          name: timestamp

      - run: |
          git fetch
          value='cat timestamp.txt'
          cd bash_scripts
          bash slack_upload_to_slack_message.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }} $value
          bash slack_get_changelog_file.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }} $GITHUB_HEAD_REF
          bash slack_get_jira_ticket.sh ${{ secrets.SLACK_BOT_TOKEN }} ${{ secrets.SLACK_CHANNEL_ID }} $GITHUB_HEAD_REF
          cd ..
      - name: Upload artifact to Slack
        uses: ./.github/actions/setup-slack
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          build-type: "feature"
          artifact-type: "apk"